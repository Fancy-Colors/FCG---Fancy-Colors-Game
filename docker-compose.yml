version: '3.9'

services:
  nginx:
    container_name: practicum-nginx
    image: practicum-nginx
    build:
      context: .
      dockerfile: Dockerfile.nginx
      args:
        ENABLED_MODULES: brotli
    restart: unless-stopped
    volumes_from:
      - server:ro
    depends_on:
      server:
        condition: service_started
    ports:
      - '3000:80'
    networks:
      - isolated
    environment:
      SERVER_PORT: ${SERVER_PORT}
      APP_HOSTNAME: ${APP_HOSTNAME}

  server:
    container_name: practicum-server
    image: practicum-server
    build:
      context: .
      dockerfile: Dockerfile.server
      args:
        SERVER_PORT: ${SERVER_PORT}
        VITE_TEAM_NAME: ${VITE_TEAM_NAME}
        VITE_API_BASE_URL: ${PRACTICUM_API_URL}/api/v2
        VITE_YANDEX_OAUTH_REDIRECT_URI: ${VITE_YANDEX_OAUTH_REDIRECT_URI}
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - /app/packages/client/dist/client
    networks:
      - isolated
    ports:
      - '${SERVER_PORT}:${SERVER_PORT}'
    environment:
      SERVER_PORT: ${SERVER_PORT}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_PORT: ${POSTGRES_PORT}
      PRACTICUM_API_URL: ${PRACTICUM_API_URL}

  postgres:
    image: postgres:14
    container_name: practicum-db
    ports:
      - '${POSTGRES_PORT}:${POSTGRES_PORT}'
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - ./tmp/pgdata:/var/lib/postgresql/data
    networks:
      - isolated
    restart: unless-stopped
    healthcheck:
      test:
        [
          'CMD-SHELL',
          "sh -c 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}'",
        ]
      interval: 10s
      timeout: 3s
      retries: 3

  pgadmin:
    container_name: practicum-pgadmin
    image: dpage/pgadmin4:6.3
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
      PGADMIN_CONFIG_ENHANCED_COOKIE_PROTECTION: 'False'
      PGADMIN_LISTEN_PORT: 80
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    ports:
      - '8080:80'
    networks:
      - isolated

volumes:
  pgadmin-data:

networks:
  isolated:
    driver: bridge
